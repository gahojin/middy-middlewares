name: Build

on:
  push:
    paths-ignore:
      - ".husky/**"
      - ".vscode/**"
      - "LICENSE"
      - "*.md"
      - "bumpver.toml"
  pull_request:
    paths-ignore:
      - ".husky/**"
      - ".vscode/**"
      - "LICENSE"
      - "*.md"
      - "bumpver.toml"

permissions:
  contents: read

jobs:
  build:
    runs-on: ubuntu-latest
    if: contains(github.event.head_commit.message, '[skip build]') == false

    strategy:
      matrix:
        node-version: ["18", "20", "22"]

    steps:
      - uses: actions/checkout@v4
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
      - name: Install pnpm
        uses: pnpm/action-setup@v4
        with:
          run_install: false
      - name: Get pnpm store directory
        shell: bash
        run: |
          echo 'STORE_PATH=$(pnpm store path --silent)' >> $GITHUB_ENV
      - name: Restore cache pnpm-store
        id: node_modules_cache
        uses: actions/cache@v4
        with:
          save-always: true
          path: ${{ env.STORE_PATH }}
          key: ${{ runner.os }}-${{ matrix.node-version }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-${{ matrix.node-version }}-pnpm-store-
      - name: Install dependencies
        run: pnpm install --frozen-lockfile
      - name: Run biome migrate
        run: pnpm biome migrate --write
      - name: Run Build
        run: pnpm run build
      - name: Run Linter & Formatter
        run: pnpm run lint
      - name: Run Typescript check
        run: pnpm run check
      - name: Get number of CPU cores
        id: cpu-cores
        uses: SimenB/github-actions-cpu-cores@v2
      - name: Run Unit tests
        run: pnpm run test --concurrency ${{ steps.cpu-cores.outputs.count }}
